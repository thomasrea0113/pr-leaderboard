@inject Leaderboard.Services.IMessageQueue Messages

@{
    var modalAction = ViewData["DataModalAction"] ?? "?handler=modal";
    var modalMethod = ViewData["DataModalMethod"] ?? "POST";
    var showModal = (ViewData["DataModalShow"] ?? false).ToString().ToLower();
    var allowModalClose = Convert.ToBoolean(ViewData["AllowModalClose"]);
    var modalBackdrop = allowModalClose ? "true" : "static";
    var modalCancelText = ViewData["ModalCancelText"] ?? "Cancel";
    var modalConfirmText = ViewData["ModalConfirmText"] ?? "Confirm";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Leaderboard</title>
    <react-bundle src="css/site.[hash].css" />
    @RenderSection("styles", required: false)
</head>

<body>
    <header>
        <nav class="navbar navbar-bold navbar-expand-sm navbar-toggleable-sm box-shadow mb-1">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Leaderboard</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <partial name="_LoginPartial" />
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-page="/index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-page="Contact">Contact</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            <partial name="_StatusMessages" model="Messages.GetAllMessages()" />
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2020 - Leaderboard - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <react-bundle src="js/site.[hash].js" />
    @RenderSection("scripts", required: false)

    <!-- Root modal -->
    <form
        action="@modalAction"
        method="@modalMethod"
        class="modal fade"
        id="root-modal"
        data-show="@showModal"
        data-backdrop="@modalBackdrop"
        data-keyboard="false"
        tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
    <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">@ViewData["ModalTitle"]</h5>
            @if (allowModalClose)
            {
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            }
        </div>
        <div class="ModalBody">
            @ViewData["modal-body"]
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">@modalCancelText</button>
            <button type="submit" class="btn btn-primary">@modalConfirmText</button>
        </div>
        </div>
    </div>
    @Html.AntiForgeryToken()
    </form>
</body>

</html>