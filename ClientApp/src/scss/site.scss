@import './mixins';
@import './animations';

@import url('https://fonts.googleapis.com/css?family=Signika&display=swap');
$font-family-base: 'Signika', sans-serif, monospace !default;

@import './themes/yeti';

@import '../../node_modules/@fortawesome/fontawesome-free/scss/fontawesome';
@import '../../node_modules/@fortawesome/fontawesome-free/scss/solid';
@import '../../node_modules/@fortawesome/fontawesome-free/scss/regular';

@import './nav';
@import './fileUpload';

$navbar-height: 3rem;
$navbar-left-width: 3rem;
$transition-collapse-width: width 0.35s ease !default;

@import './position';

// Important to prevent transitions from firing on page load
body.preload * {
    @include transition(none !important);
}

.container:not(.no-shadow) {
    @extend .bg-white;
    @extend .shadow;
}

html {
    letter-spacing: 0.05rem;
    font-size: 12px;

    @include media-breakpoint-up(md) {
        font-size: $font-size-base;
    }
}

.has-overlay {
    position: relative;
    background-size: cover;
    .overlay {
        @include overlay();
    }
}

.bg-body {
    background-color: $body-bg !important;
}

.shadow-bottom::before {
    content: '';

    @include overlay();

    $shadow-bottom: inset 0px -50px 20px -20px $body-bg;
    -moz-box-shadow: $shadow-bottom;
    -webkit-box-shadow: $shadow-bottom;
    box-shadow: $shadow-bottom;
}

.card.card-transparent {
    background-color: rgba($color: $body-bg, $alpha: 0.5);

    .card-header,
    .card-footer {
        background-color: rgba($color: $black, $alpha: 0.5);
    }
}

.btn {
    label {
        margin-bottom: 0;
        cursor: inherit;
    }
}

.bold {
    @extend .font-weight-bolder;
    text-transform: uppercase !important;
    letter-spacing: 0.5rem;
}

.grow {
    transition: all 0.2s ease-in-out;
}
.grow:hover {
    transform: scale(1.03);
}

.btn-xs {
    padding: 0.1rem 0.2rem;
}

.btn-icon {
    @extend .border-0;
    @extend .btn-xs;
    @extend .bg-transparent;
}

$sizes: (10, 20, 25, 50, 75);
@each $prop, $abbrev in (width: vw, height: vh) {
    @each $size in $sizes {
        .#{$abbrev}-#{$size} {
            #{$prop}: #{$size}$abbrev !important;
        }
    }
}

// hidden when the viewport is smaller than the provided grid breakpoint
@each $label, $size in $grid-breakpoints {
    @include media-breakpoint-down($label) {
        .hide-#{$label} {
            display: none;
        }
    }
}

.text-blue {
    color: $blue;
}

.text-pink {
    color: $pink;
}

.fas,
.no-highlight {
    user-select: none; /* supported by Chrome and Opera */
    -webkit-user-select: none; /* Safari */
    -khtml-user-select: none; /* Konqueror HTML */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* Internet Explorer/Edge */
}

.loading-indicator {
    display: none;
}

a.navbar-brand {
    white-space: normal;
    text-align: center;
    word-break: break-all;
}

button.accept-policy {
    font-size: 1rem;
    line-height: inherit;
}

/* Sticky footer styles
-------------------------------------------------- */
html {
    position: relative;
    min-height: 100%;
}
.footer {
    position: absolute;
    bottom: 0;
    width: 100%;
    white-space: nowrap;
    line-height: 60px; /* Vertically center the text there */
}
